{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\thako\\\\Desktop\\\\React Practice\\\\React Todo using Local-Storage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _toConsumableArray from \"C:\\\\Users\\\\thako\\\\Desktop\\\\React Practice\\\\React Todo using Local-Storage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\thako\\\\Desktop\\\\React Practice\\\\React Todo using Local-Storage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\thako\\\\Desktop\\\\React Practice\\\\React Todo using Local-Storage\\\\src\\\\components\\\\Todo.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar getData = function getData() {\n  var list = localStorage.getItem(\"todo\");\n\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"todo\"));\n  } else {\n    return [];\n  }\n};\n\nexport var Todo = function Todo() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(getData()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var handleChange = function handleChange(e) {\n    setText(e.target.value);\n  };\n\n  var handleAddTodo = function handleAddTodo() {\n    var Todo = {\n      title: text,\n      status: false,\n      id: nanoid(4)\n    };\n    setData([].concat(_toConsumableArray(data), [Todo]));\n    setText(\"\");\n  };\n\n  var handleToggle = function handleToggle(e) {\n    setData(data.map(function (el) {\n      if (e.id === el.id) {\n        return _objectSpread(_objectSpread({}, el), {}, {\n          status: !el.status\n        });\n      }\n\n      return el;\n    }));\n  };\n\n  var handleDelete = function handleDelete(e) {\n    setData(data.filter(function (el) {\n      return e.id !== el.id;\n    }));\n  };\n\n  useEffect(function () {\n    localStorage.setItem(\"todo\", JSON.stringify(data));\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a Todo\",\n      value: text,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(function (e) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: e.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: e.status ? \"Completed\" : \"Not Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function onClick() {\n              handleToggle(e);\n            },\n            children: \"Toggle Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function onClick() {\n              handleDelete(e);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, _this)]\n        }, e.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Todo, \"b3LFP9l6oHuSIW5Oj5XUvznVSpk=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/thako/Desktop/React Practice/React Todo using Local-Storage/src/components/Todo.jsx"],"names":["useState","useEffect","nanoid","getData","list","localStorage","getItem","JSON","parse","Todo","text","setText","data","setData","handleChange","e","target","value","handleAddTodo","title","status","id","handleToggle","map","el","handleDelete","filter","setItem","stringify"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst getData = () => {\r\n  let list = localStorage.getItem(\"todo\");\r\n\r\n  if (list) {\r\n    return JSON.parse(localStorage.getItem(\"todo\"));\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const Todo = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [data, setData] = useState(getData());\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleAddTodo = () => {\r\n    const Todo = {\r\n      title: text,\r\n      status: false,\r\n      id: nanoid(4),\r\n    };\r\n    setData([...data, Todo]);\r\n    setText(\"\");\r\n  };\r\n  const handleToggle = (e) => {\r\n    setData(\r\n      data.map((el) => {\r\n        if (e.id === el.id) {\r\n          return {\r\n            ...el,\r\n            status: !el.status,\r\n          };\r\n        }\r\n        return el;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    setData(\r\n      data.filter((el) => {\r\n        return e.id !== el.id;\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todo\", JSON.stringify(data));\r\n  }, [data]);\r\n  return (\r\n    <>\r\n      <h1>Todo App</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter a Todo\"\r\n        value={text}\r\n        onChange={handleChange}\r\n      />\r\n      <button onClick={handleAddTodo}>Add Todo</button>\r\n      <div>\r\n        {data.map((e) => (\r\n          <div key={e.id}>\r\n            <p>{e.title}</p>\r\n            <p>{e.status ? \"Completed\" : \"Not Completed\"}</p>\r\n            <button\r\n              onClick={() => {\r\n                handleToggle(e);\r\n              }}\r\n            >\r\n              Toggle Status\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                handleDelete(e);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}